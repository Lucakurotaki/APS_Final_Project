// <auto-generated />
using System;
using APS_Final_Project.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APS_Final_Project.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20221206003642_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("APS_Final_Project.Models.CartaoDeCredito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cvc")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Validade")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("CartoesDeCredito");
                });

            modelBuilder.Entity("APS_Final_Project.Models.Consumidor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cpf")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Endereco")
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("Nascimento")
                        .HasColumnType("date");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<bool>("Vip")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Consumidores");
                });

            modelBuilder.Entity("APS_Final_Project.Models.Pagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly>("DataEmissao")
                        .HasColumnType("date");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.Property<float>("Valor")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.ToTable("Pagamentos");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Pagamento");
                });

            modelBuilder.Entity("APS_Final_Project.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ConsumidorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ConsumidorId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("APS_Final_Project.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("TipoId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("APS_Final_Project.Models.TipoProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TiposProduto");
                });

            modelBuilder.Entity("APS_Final_Project.Models.Boleto", b =>
                {
                    b.HasBaseType("APS_Final_Project.Models.Pagamento");

                    b.Property<string>("Codigo")
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("Vencimento")
                        .HasColumnType("date");

                    b.HasDiscriminator().HasValue("Boleto");
                });

            modelBuilder.Entity("APS_Final_Project.Models.Pagamento", b =>
                {
                    b.HasOne("APS_Final_Project.Models.Pedido", "Pedido")
                        .WithMany()
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("APS_Final_Project.Models.Pedido", b =>
                {
                    b.HasOne("APS_Final_Project.Models.Consumidor", "Consumidor")
                        .WithMany("Pedidos")
                        .HasForeignKey("ConsumidorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consumidor");
                });

            modelBuilder.Entity("APS_Final_Project.Models.Produto", b =>
                {
                    b.HasOne("APS_Final_Project.Models.Pedido", "Pedido")
                        .WithMany("Itens")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APS_Final_Project.Models.TipoProduto", "Tipo")
                        .WithMany("Produtos")
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("APS_Final_Project.Models.Consumidor", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("APS_Final_Project.Models.Pedido", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("APS_Final_Project.Models.TipoProduto", b =>
                {
                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
